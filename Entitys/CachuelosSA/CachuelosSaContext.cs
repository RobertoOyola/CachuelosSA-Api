// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace Entitys.CachuelosSA;

public partial class CachuelosSaContext : DbContext
{
    private readonly IConfiguration _configuration;
    public CachuelosSaContext(DbContextOptions<CachuelosSaContext> options, IConfiguration configuration)
        : base(options)
    {
        _configuration = configuration;
    }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        if (!optionsBuilder.IsConfigured && _configuration != null)
        {
            optionsBuilder.UseSqlServer(_configuration.GetConnectionString("DefaultConnection"));
        }
    }

    public virtual DbSet<Catalogo> Catalogos { get; set; }

    public virtual DbSet<Documento> Documentos { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<TipoDocumento> TipoDocumentos { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    public virtual DbSet<UsuarioInfo> UsuarioInfos { get; set; }

    public virtual DbSet<UsuariosXDocumento> UsuariosXDocumentos { get; set; }

    public virtual DbSet<OtpAction> OtpActions { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Catalogo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Catalogo__3214EC072E89D73F");

            entity.ToTable("Catalogo", tb => tb.HasTrigger("trg_Catalogo_Update"));

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.Adicional).HasMaxLength(100);
            entity.Property(e => e.Codigo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Descripcion).HasMaxLength(200);
            entity.Property(e => e.FechaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Nombre).HasMaxLength(100);
            entity.Property(e => e.NombreCat)
                .IsRequired()
                .HasMaxLength(100);
        });

        modelBuilder.Entity<Documento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Document__3214EC070DEC6C58");

            entity.ToTable("Documento", tb => tb.HasTrigger("trg_Documento_Update"));

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.FechaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaIngreso)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.UrlDocumento)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.IdTipoDocumentosNavigation).WithMany(p => p.Documentos)
                .HasForeignKey(d => d.IdTipoDocumentos)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Documento_TipoDocumento");
        });

        modelBuilder.Entity<OtpAction>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OtpActio__3214EC07A177F94F");

            entity.ToTable("OtpAction", tb => tb.HasTrigger("trg_OtpAction_Update"));

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.CodigoOtp)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Expiracion).HasColumnType("datetime");
            entity.Property(e => e.FechaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaGeneracion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.TipoOtp)
                .IsRequired()
                .HasMaxLength(5);
            entity.Property(e => e.Usado).HasDefaultValue(false);

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.OtpActions)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuario_OtpAction");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Roles__3214EC0790A61A19");

            entity.HasIndex(e => e.NombreRol, "UQ__Roles__4F0B537F20025383").IsUnique();

            entity.Property(e => e.Descripcion).HasMaxLength(255);
            entity.Property(e => e.NombreRol)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<TipoDocumento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TipoDocu__3214EC073330D35D");

            entity.HasIndex(e => e.NombreDocumento, "UQ__TipoDocu__637890AB91BDF8A7").IsUnique();

            entity.Property(e => e.Descripcion).HasMaxLength(255);
            entity.Property(e => e.NombreDocumento)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Usuarios__3214EC0767A3BFB0");

            entity.ToTable(tb => tb.HasTrigger("trg_Usuarios_Update"));

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.ContrasenaHash)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.Correo)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.ExpiracionToken).HasColumnType("datetime");
            entity.Property(e => e.FechaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaCreacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaFinSubscrito).HasColumnType("datetime");
            entity.Property(e => e.FechaUltimoLogin).HasColumnType("datetime");
            entity.Property(e => e.NombreUsuario)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.RolId).HasDefaultValue(1);
            entity.Property(e => e.Subscrito).HasDefaultValue(false);
            entity.Property(e => e.TokenRecuperacion).HasMaxLength(255);
            entity.Property(e => e.Verificado).HasDefaultValue(false);

            entity.HasOne(d => d.Rol).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.RolId)
                .HasConstraintName("FK_Usuarios_Roles");
        });

        modelBuilder.Entity<UsuarioInfo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__UsuarioI__3214EC079DB28AC3");

            entity.ToTable("UsuarioInfo", tb => tb.HasTrigger("trg_UsuariosInfo_Update"));

            entity.Property(e => e.Activo).HasDefaultValue(true);
            entity.Property(e => e.Apellido).HasMaxLength(200);
            entity.Property(e => e.Ciudad).HasMaxLength(5);
            entity.Property(e => e.Direccion).HasMaxLength(255);
            entity.Property(e => e.Discapacidad).HasDefaultValue(false);
            entity.Property(e => e.EstadoCivil).HasMaxLength(1);
            entity.Property(e => e.FechaActualizacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaNacimiento)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FechaUltimaConexion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Identificacion).HasMaxLength(50);
            entity.Property(e => e.Nacionalidad).HasMaxLength(5);
            entity.Property(e => e.Nombre).HasMaxLength(200);
            entity.Property(e => e.Provincia).HasMaxLength(5);
            entity.Property(e => e.Telefono).HasMaxLength(20);
            entity.Property(e => e.TipoDiscapacidad).HasMaxLength(100);
            entity.Property(e => e.TipoIdentificacion).HasMaxLength(1);
            entity.Property(e => e.UrlImg).HasMaxLength(500);

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.UsuarioInfos)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Usuario_UsuarioInfo");
        });

        modelBuilder.Entity<UsuariosXDocumento>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Usuarios__3214EC07058BAE5C");

            entity.Property(e => e.FechaAsignacion)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.IdDocumentoNavigation).WithMany(p => p.UsuariosXDocumentos)
                .HasForeignKey(d => d.IdDocumento)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UsuariosXDocumentos_Documento");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.UsuariosXDocumentos)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_UsuariosXDocumentos_Usuarios");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}